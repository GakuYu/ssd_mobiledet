#!/usr/bin/env python
# -*- encoding: utf-8 -*-
'''
@Description: utils
@Date: 2021/06/08 14:42:17
@Author: Gaku Yu
@version: 1.0
'''
import cv2 as cv


class ImageUtils:
    """
    @Description: 图片处理
    """
    COLORS = [
        (102, 255, 255),
        (255, 102, 255),
        (255, 255, 102),
        (255, 102, 102),
        (102, 255, 102),
        (102, 102, 255),
    ]

    @staticmethod
    def draw(img, boxes, classes, scores, label_map, threshold=0):
        """
        @Description: 将检测结果画到图片上
        ---------
        @Args: 
            img: 原图片;
            boxes: 目标框数组;
            classes: 目标类别数组;
            scores: 目标得分数组;
            label_map: 类别标签;
            threshold: 检测阈值;
        -------
        @Returns: 
            dst: 添加检测结果的图片
        -------
        """
        ih, iw = img.shape[:2]
        dst = img.copy()
        for i in range(len(boxes)):
            box = boxes[i]
            label = label_map[int(classes[i])]
            score = scores[i]
            if score >= threshold:
                ymin, xmin, ymax, xmax = box
                ymin, xmin, ymax, xmax = int(ymin*ih), int(xmin*iw), int(ymax*ih), int(xmax*iw)
                color = ImageUtils.COLORS[i%len(ImageUtils.COLORS)]
                cv.rectangle(dst, (xmin, ymin), (xmax, ymax), color, 1)
                cv.putText(
                    dst, '%s %0.1f%%' % (label, score * 100), 
                    (xmin, ymin), cv.FONT_HERSHEY_TRIPLEX, 
                    0.4, color, 1
                )
            else:
                break
        return dst
    

def load_label_map(label_map_path, append_bg=False):
    label_map = []
    if append_bg:
        label_map.append("backgroub")
    with open(label_map_path) as f:
        l = f.readline()
        while l:
            label_map.append(l.replace('\r','').replace('\n','').replace('\t',''))
            l = f.readline()
    return label_map
    
if __name__ == '__main__':
    image_path = 'test-data/kite.jpg'
    label_map_path = 'test-data/mscoco_label_map.txt'
    label_map = load_label_map(label_map_path, append_bg=True)
    with open(label_map_path) as f:
        l = f.readline()
        while l:
            label_map.append(l.replace('\r','').replace('\n','').replace('\t',''))
            l = f.readline()
    
    img = cv.cvtColor(cv.imread(image_path), cv.COLOR_BGR2RGB)
    ih, iw = img.shape[:2]
    r = min(iw/1280.0, ih/720.0)
    # cv.imshow("img", cv.cvtColor(cv.resize(img, (int(iw*r), int(ih*r))), cv.COLOR_RGB2BGR))
    # cv.waitKey(0)
    # cv.destroyAllWindows()
    boxes = [
        [0.26507580280303955, 0.21150515973567963, 0.30852919816970825, 0.22794391214847565], 
        [0.08647047728300095, 0.4443473517894745, 0.17062655091285706, 0.49572423100471497], 
        [0.3847077786922455, 0.4265698790550232, 0.40258315205574036, 0.4425814151763916], 
        [0.5651983618736267, 0.06659416854381561, 0.615748941898346, 0.08550786972045898], 
        [0.5710468888282776, 0.02894216775894165, 0.6160065531730652, 0.04448116570711136], 
        [0.3781260848045349, 0.34569042921066284, 0.4062495827674866, 0.3641250729560852], 
        [0.7712101936340332, 0.15534070134162903, 0.9208437204360962, 0.2043021023273468], 
        [0.5620044469833374, 0.3923475444316864, 0.589680552482605, 0.4107288420200348], 
        [0.5279257893562317, 0.25353357195854187, 0.5519645810127258, 0.26534411311149597], 
        [0.2715032994747162, 0.20393498241901398, 0.30500367283821106, 0.2173578292131424], 
        [0.436948299407959, 0.7995284199714661, 0.4687107801437378, 0.8150447010993958], 
        [0.6079882383346558, 0.12858738005161285, 0.6333905458450317, 0.14633361995220184], 
        [0.416182279586792, 0.22238010168075562, 0.44283974170684814, 0.24135994911193848], 
        [0.6796786189079285, 0.08167092502117157, 0.8084884285926819, 0.11582230031490326], 
        [0.533356785774231, 0.26947125792503357, 0.5495007038116455, 0.28271445631980896], 
        [0.5388476848602295, 0.3914659917354584, 0.5562392473220825, 0.4016644060611725], 
        [0.5927238464355469, 0.13024136424064636, 0.614476203918457, 0.14492082595825195], 
        [0.436948299407959, 0.7995284199714661, 0.4687107801437378, 0.8150447010993958], 
        [0.5620044469833374, 0.3923475444316864, 0.589680552482605, 0.4107288420200348], 
        [0.5341960191726685, 0.4860803484916687, 0.5480796098709106, 0.4940462112426758], 
        [0.4191778302192688, 0.341116338968277, 0.440906822681427, 0.35923656821250916], 
        [0.6079882383346558, 0.12858738005161285, 0.6333905458450317, 0.14633361995220184], 
        [0.48978105187416077, 0.4497796893119812, 0.5032197833061218, 0.4561556577682495], 
        [0.5088169574737549, 0.014827042818069458, 0.6375247240066528, 0.8622550964355469], 
        [0.4418221712112427, 0.8024714589118958, 0.47995370626449585, 0.8172674775123596], 
        [0.5088169574737549, 0.014827042818069458, 0.6375247240066528, 0.8622550964355469], 
        [0.5871825814247131, 0.01509309932589531, 0.6331642270088196, 0.02936622127890587], 
        [0.49790921807289124, 0.4955749809741974, 0.5099589824676514, 0.5011865496635437], 
        [0.6944025754928589, 0.08782428503036499, 0.784333348274231, 0.1232171356678009], 
        [0.5407147407531738, 0.4484778344631195, 0.5548089742660522, 0.4558897316455841], 
        [0.509888768196106, 0.40084323287010193, 0.5213229656219482, 0.4070131480693817], 
        [0.413167268037796, 0.018232256174087524, 0.622709333896637, 0.9192838668823242], 
        [0.5473557710647583, 0.5827397108078003, 0.5598938465118408, 0.5953892469406128], 
        [0.5927238464355469, 0.13024136424064636, 0.614476203918457, 0.14492082595825195], 
        [0.5651983618736267, 0.06659416854381561, 0.615748941898346, 0.08550786972045898], 
        [0.5535262823104858, 0.6523336172103882, 0.5646899938583374, 0.6606888771057129], 
        [0.44118887186050415, 0.8060109615325928, 0.468874990940094, 0.8263671398162842], 
        [0.5244283080101013, 0.33526211977005005, 0.5379707217216492, 0.34348064661026], 
        [0.5023348331451416, 0.8955122828483582, 0.5104674100875854, 0.9025269150733948], 
        [0.5898681282997131, 0.07077740132808685, 0.6306027770042419, 0.09353430569171906], 
        [0.7906692624092102, 0.16083955764770508, 0.9310747981071472, 0.2056903839111328], 
        [0.5279257893562317, 0.25353357195854187, 0.5519645810127258, 0.26534411311149597], 
        [0.42581531405448914, 0.4440646171569824, 0.4458133280277252, 0.4565693736076355], 
        [0.6944025754928589, 0.08782428503036499, 0.784333348274231, 0.1232171356678009], 
        [0.4943186640739441, 0.5451592206954956, 0.5041456818580627, 0.5500940084457397], 
        [0.48714929819107056, 0.18121622502803802, 0.5036274790763855, 0.18916670978069305], 
        [0.7712101936340332, 0.15534070134162903, 0.9208437204360962, 0.2043021023273468], 
        [0.436948299407959, 0.7995284199714661, 0.4687107801437378, 0.8150447010993958], 
        [0.5428365468978882, 0.14644666016101837, 0.5569751262664795, 0.15248428285121918], 
        [0.5395355820655823, 0.5485934615135193, 0.5507301688194275, 0.555755078792572], 
        [0.4875660538673401, 0.6454267501831055, 0.4979207515716553, 0.6513837575912476], 
        [0.5366968512535095, 0.20132631063461304, 0.5475746989250183, 0.20679166913032532], 
        [0.5710468888282776, 0.02894216775894165, 0.6160065531730652, 0.04448116570711136], 
        [0.6990104913711548, 0.08318568766117096, 0.8308578729629517, 0.11636309325695038], 
        [0.5154086351394653, 0.01928505301475525, 0.7122372388839722, 0.7779715061187744], 
        [0.5279257893562317, 0.25353357195854187, 0.5519645810127258, 0.26534411311149597], 
        [0.5620044469833374, 0.3923475444316864, 0.589680552482605, 0.4107288420200348], 
        [0.8065025210380554, 0.08775676041841507, 0.8462129235267639, 0.11352559179067612], 
        [0.5787075161933899, 0.6578726172447205, 0.5904989838600159, 0.669444739818573], 
        [0.26507580280303955, 0.21150515973567963, 0.30852919816970825, 0.22794391214847565], 
        [0.898851215839386, 0.16955238580703735, 0.9551243185997009, 0.20482179522514343], 
        [0.533356785774231, 0.26947125792503357, 0.5495007038116455, 0.28271445631980896], 
        [0.6990104913711548, 0.08318568766117096, 0.8308578729629517, 0.11636309325695038], 
        [0.5729396939277649, 0.4046192467212677, 0.5901331305503845, 0.42301222681999207], 
        [0.4878217577934265, 0.00821542739868164, 0.586030900478363, 0.4014819860458374], 
        [0.6241550445556641, 0.33617669343948364, 0.6519229412078857, 0.35724806785583496], 
        [0.37454545497894287, 0.1042085587978363, 0.5776078701019287, 0.8394705057144165], 
        [0.48163387179374695, 0.6985462307929993, 0.49252769351005554, 0.7052544951438904], 
        [0.4651373326778412, 0.8191167712211609, 0.4819795787334442, 0.8316547274589539], 
        [0.4908599257469177, 0.15104801952838898, 0.5034773349761963, 0.1571686714887619], 
        [0.5834068059921265, 0.5744082927703857, 0.5967420339584351, 0.5932621955871582], 
        [0.48878857493400574, 0.08955439925193787, 0.5023401379585266, 0.0981859564781189], 
        [0.4418221712112427, 0.8024714589118958, 0.47995370626449585, 0.8172674775123596], 
        [0.5834068059921265, 0.5744082927703857, 0.5967420339584351, 0.5932621955871582], 
        [0.8065025210380554, 0.08775676041841507, 0.8462129235267639, 0.11352559179067612], 
        [0.436948299407959, 0.7995284199714661, 0.4687107801437378, 0.8150447010993958], 
        [0.5820242166519165, 0.5331500768661499, 0.5952177047729492, 0.5538839101791382], 
        [0.4907848536968231, 0.6003425717353821, 0.5008068084716797, 0.6058583855628967], 
        [0.4418221712112427, 0.8024714589118958, 0.47995370626449585, 0.8172674775123596], 
        [0.5459631681442261, 0.09325303137302399, 0.5615794658660889, 0.1005464643239975], 
        [0.2715032994747162, 0.20393498241901398, 0.30500367283821106, 0.2173578292131424], 
        [0.5134835243225098, 0.030191510915756226, 0.8117330074310303, 0.928236722946167], 
        [0.2844831943511963, 0.2092275619506836, 0.33450597524642944, 0.2304171919822693], 
        [0.44118887186050415, 0.8060109615325928, 0.468874990940094, 0.8263671398162842], 
        [0.4881196618080139, 0.13639667630195618, 0.5869904160499573, 0.5163555145263672], 
        [0.5101110935211182, 0.009606942534446716, 0.6347044706344604, 0.46888184547424316], 
        [0.39926156401634216, 0.23983851075172424, 0.41373881697654724, 0.2522863447666168], 
        [0.26507580280303955, 0.21150515973567963, 0.30852919816970825, 0.22794391214847565], 
        [0.5820242166519165, 0.5331500768661499, 0.5952177047729492, 0.5538839101791382], 
        [0.48978105187416077, 0.4497796893119812, 0.5032197833061218, 0.4561556577682495], 
        [0.4314644932746887, 0.2823018729686737, 0.4514152407646179, 0.2962893545627594], 
        [0.5729396939277649, 0.4046192467212677, 0.5901331305503845, 0.42301222681999207], 
        [0.8065025210380554, 0.08775676041841507, 0.8462129235267639, 0.11352559179067612], 
        [0.416182279586792, 0.22238010168075562, 0.44283974170684814, 0.24135994911193848], 
        [0.2921946048736572, 0.20851346850395203, 0.3302028179168701, 0.2209964096546173], 
        [0.45828062295913696, 0.0777311623096466, 0.6558331847190857, 0.8204598426818848], 
        [0.4987708628177643, 0.2404322475194931, 0.5130321979522705, 0.24768494069576263], 
        [0.5620044469833374, 0.3923475444316864, 0.589680552482605, 0.4107288420200348], 
        [0.3847077786922455, 0.4265698790550232, 0.40258315205574036, 0.4425814151763916], 
        [0.5388476848602295, 0.3914659917354584, 0.5562392473220825, 0.4016644060611725], 
    ]
    classes = [
        38.0, 38.0, 38.0, 1.0, 1.0, 38.0, 1.0, 1.0, 1.0, 38.0, 38.0, 
        1.0, 38.0, 1.0, 1.0, 1.0, 1.0, 1.0, 42.0, 1.0, 38.0, 42.0, 1.0, 
        38.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 38.0, 1.0, 42.0, 42.0, 
        1.0, 38.0, 1.0, 1.0, 1.0, 42.0, 42.0, 38.0, 42.0, 1.0, 1.0, 27.0, 
        9.0, 1.0, 1.0, 1.0, 1.0, 42.0, 42.0, 1.0, 38.0, 38.0, 1.0, 1.0, 16.0, 
        42.0, 42.0, 38.0, 1.0, 1.0, 1.0, 38.0, 1.0, 1.0, 1.0, 1.0, 1.0, 38.0, 
        42.0, 38.0, 42.0, 1.0, 1.0, 42.0, 1.0, 16.0, 38.0, 38.0, 1.0, 1.0, 1.0, 
        38.0, 5.0, 42.0, 38.0, 38.0, 42.0, 42.0, 1.0, 38.0, 38.0, 1.0, 9.0, 16.0, 
        42.0
    ]
    scores = [
        0.7166489362716675, 0.7026798129081726, 0.700124979019165, 0.6982473731040955, 
        0.6915954351425171, 0.6903090476989746, 0.682847797870636, 0.6797699332237244, 
        0.6659715175628662, 0.6296914219856262, 0.6002169251441956, 0.5668790936470032, 
        0.561890184879303, 0.5548298358917236, 0.5317709445953369, 0.5309966802597046, 
        0.5283684134483337, 0.5042078495025635, 0.5001258850097656, 0.491777628660202, 
        0.4754272401332855, 0.4391396641731262, 0.427280068397522, 0.4220903813838959, 
        0.4187639653682709, 0.40977826714515686, 0.4052613079547882, 0.40396973490715027, 
        0.40255558490753174, 0.3917801082134247, 0.38257521390914917, 0.37943750619888306, 
        0.3753650486469269, 0.3730815649032593, 0.37241679430007935, 0.37211623787879944, 
        0.3658788800239563, 0.3644912838935852, 0.3590865135192871, 0.34938785433769226, 
        0.34826427698135376, 0.347247838973999, 0.3439512550830841, 0.3420328199863434, 
        0.3386251926422119, 0.3365590274333954, 0.3273731470108032, 0.32051217555999756, 
        0.320445716381073, 0.31917548179626465, 0.3176671266555786, 0.31593993306159973, 
        0.3144340515136719, 0.30943241715431213, 0.3078029155731201, 0.30726444721221924, 
        0.30548059940338135, 0.303561806678772, 0.30125892162323, 0.3009982109069824, 
        0.2970893979072571, 0.2940896153450012, 0.29313334822654724, 0.28974777460098267, 
        0.2879341244697571, 0.28748562932014465, 0.28617626428604126, 0.28512734174728394, 
        0.2840690016746521, 0.28129568696022034, 0.2784966826438904, 0.2751219570636749, 
        0.274568647146225, 0.27355003356933594, 0.27253466844558716, 0.2705055773258209, 
        0.27033936977386475, 0.2702452540397644, 0.2672257423400879, 0.2670776844024658, 
        0.2660819888114929, 0.26466524600982666, 0.2613595724105835, 0.25796055793762207, 
        0.2539561092853546, 0.25196367502212524, 0.2501140832901001, 0.25005054473876953, 
        0.24941331148147583, 0.24906855821609497, 0.2487640380859375, 0.24814772605895996, 
        0.2478555142879486, 0.24771803617477417, 0.24330183863639832, 0.2409854233264923, 
        0.23966526985168457, 0.23957517743110657, 0.2387406826019287, 0.23790758848190308
    ]
    dst = ImageUtils.draw(img, boxes, classes, scores, label_map, threshold=0.6)
    cv.imshow("dst", cv.cvtColor(cv.resize(dst, (int(iw*r), int(ih*r))), cv.COLOR_RGB2BGR))
    cv.waitKey(0)
    cv.destroyAllWindows()
    cv.imwrite('test-data/test_draw.jpg', cv.cvtColor(dst, cv.COLOR_RGB2BGR))
